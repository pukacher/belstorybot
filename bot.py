import logging
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import asyncio

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
API_TOKEN = "7624098941:AAHu_oIJYj4S_vjDWua5_m95PnYJgkKNnMc"
CHANNEL_USERNAME = "@BretelkaSalon"
PDF_FILE_PATH = "–ì–∞–∏ÃÜ–¥ –ö–∞–ø—Å—É–ª–∞ –¥–ª—è –æ—Ç–ø—É—Å–∫–∞.pdf"

# === –õ–û–ì–ò ===
logging.basicConfig(level=logging.INFO)

# === –ë–û–¢ ===
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# === –ö–ù–û–ü–ö–ò ===
def subscribe_button():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–Ω–∞", callback_data="check_subscribe")],
            [InlineKeyboardButton(text="üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url="https://t.me/BretelkaSalon")]
        ]
    )

# === –°–¢–ê–†–¢ ===
@dp.message(Command("start"))
async def start(message: types.Message):
    text = (
        "üìç–ü—Ä–∏–≤–µ—Ç! –ú—ã ‚Äî —Å–µ—Ç—å –º–∞–≥–∞–∑–∏–Ω–æ–≤ MyBelstory —Å–æ–≤–º–µ—Å—Ç–Ω–æ —Å–æ —Å—Ç–∏–ª–∏—Å—Ç–æ–º –†–∏–º–º–æ–π –ö—É–ª–∞–∫–æ–≤–æ–π "
        "—Å–æ—Å—Ç–∞–≤–∏–ª–∏ –¥–ª—è –í–∞—Å –≥–∞–π–¥ ¬´–í –æ—Ç–ø—É—Å–∫ –Ω–∞–ª–µ–≥–∫–µ¬ª, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Å–æ–±—Ä–∞—Ç—å –ª–µ—Ç–Ω—é—é –∫–∞–ø—Å—É–ª—É "
        "–¥–ª—è –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è. –ß—Ç–æ–±—ã —Å–æ–±—Ä–∞—Ç—å —á–µ–º–æ–¥–∞–Ω –±–µ–∑ –≥–æ–ª–æ–≤–Ω–æ–π –±–æ–ª–∏, –Ω–µ –ø–µ—Ä–µ–ø–ª–∞—á–∏–≤–∞—Ç—å "
        "–∑–∞ –ø–µ—Ä–µ–≤–µ—Åü§≠ –∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –Ω–æ—Å–∏—Ç—å –Ω–æ–≤—ã–µ –æ–±—Ä–∞–∑—ãüíÉüèº\n\n"
        "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≥–∞–π–¥, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª MyBelstory üëá"
    )
    await message.answer(text, reply_markup=subscribe_button())

# === –ü–†–û–í–ï–†–ö–ê –ü–û–î–ü–ò–°–ö–ò ===
async def check_subscription(user_id: int) -> bool:
    member = await bot.get_chat_member(chat_id=CHANNEL_USERNAME, user_id=user_id)
    return member.status in ("member", "administrator", "creator")

# === –û–ë–†–ê–ë–û–¢–ö–ê –ö–ù–û–ü–ö–ò ===
@dp.callback_query(F.data == "check_subscribe")
async def check_sub(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    if await check_subscription(user_id):
        await callback.message.answer(
            "üìç –û—Ç–ª–∏—á–Ω–æ! –ü–æ–¥–ø–∏—Å–∫–∞ –µ—Å—Ç—åüôåüèª –õ–æ–≤–∏ –≥–∞–π–¥ –∏ –æ—Ç–ª–∏—á–Ω–æ–≥–æ —Ç–µ–±–µ –æ—Ç–ø—É—Å–∫–∞ ‚úàÔ∏è"
        )
        await callback.message.answer_document(types.FSInputFile(PDF_FILE_PATH))
    else:
        await callback.message.answer(
            "üìç–•–º–º–º‚Ä¶ –ø–æ—á–µ–º—É-—Ç–æ —è –Ω–µ –Ω–∞—à–µ–ª —Ç–µ–±—è —Å—Ä–µ–¥–∏ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤. "
            "–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ üëá",
            reply_markup=subscribe_button()
        )

# === –ó–ê–ü–£–°–ö ===
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
